#!/usr/bin/env python3

# define a dictionary to store the prefix, the corresponding log level, and suffix
log_level_dict = [
    ["EM", "C_LOG_LEVEL_EMERG",""],
    ["A", "C_LOG_LEVEL_ALERT",""],
    ["C", "C_LOG_LEVEL_CRIT",""],
    ["E", "C_LOG_LEVEL_ERR",""],
    ["W", "C_LOG_LEVEL_WARNING",""],
    ["N", "C_LOG_LEVEL_NOTICE",""],
    ["I", "C_LOG_LEVEL_INFO",""],
    ["D", "C_LOG_LEVEL_DEBUG",""],
    ["D", "C_LOG_LEVEL_DEBUG2","2"],
    ["D", "C_LOG_LEVEL_DEBUG3","3"],
    ["IO", "C_LOG_LEVEL_IO_TRACE",""],
    ["S", "C_LOG_LEVEL_SLOG",""],
]

# open the file to write the log macros
with open("gen_log_macros.h", "w") as f:
    # write the header of the file
    f.write("/*\n")
    f.write(" * This file is generated by gen_log_macros.py\n")
    f.write(" * Do not modify this file manually\n")
    f.write(" * If you want to modify the log macros, please modify the gen_log_macros.py\n")
    f.write(" * and run the script to generate the log macros in the same directory where it is located\n")
    f.write(" */\n")
    f.write("#ifndef GEN_LOG_MACROS_H\n")
    f.write("#define GEN_LOG_MACROS_H\n")
    f.write("\n")
    f.write("\n")
    # write the log macros
    for log_level in log_level_dict:
        prefix = log_level[0]
        log_level_name = log_level[1]
        suffix = log_level[2]
        macro = "{0}LOG{1}(...)".format(prefix, suffix)
        f.write("#define {0} LOG_PRINTF({1}, __VA_ARGS__)\n".format(macro, log_level_name))
    f.write("\n")
    for log_level in log_level_dict:
        prefix = log_level[0]
        log_level_name = log_level[1]
        suffix = log_level[2]
        macro = "{0}LOG{1}_EX(file, line, func, mod, ...)".format(prefix, suffix)
        f.write("#define {0} LOG_PRINTF_EX({1}, file, line, func, mod, __VA_ARGS__)\n".format(macro, log_level_name))
    f.write("\n")
    for log_level in log_level_dict:
        prefix = log_level[0]
        log_level_name = log_level[1]
        suffix = log_level[2]
        macro = "{0}LOG{1}_HEXDUMP(buf, len, ...)".format(prefix, suffix)
        f.write("#define {0} LOG_HEXDUMP({1}, buf, len, __VA_ARGS__)\n".format(macro, log_level_name))
    f.write("\n")
    for log_level in log_level_dict:
        prefix = log_level[0]
        log_level_name = log_level[1]
        suffix = log_level[2]
        macro = "{0}LOG{1}_HEXDUMP_EX(buf, len, file, line, func, mod, ...)".format(prefix, suffix)
        f.write("#define {0} LOG_HEXDUMP_EX({1}, file, line, func, mod, buf, len, __VA_ARGS__)\n".format(macro, log_level_name))
    f.write("\n")
    for log_level in log_level_dict:
        prefix = log_level[0]
        log_level_name = log_level[1]
        suffix = log_level[2]
        macro = "{0}LOG{1}_HEXDUMP_NO_ASCII(buf, len, ...)".format(prefix, suffix)
        f.write("#define {0} LOG_HEXDUMP_NO_ASCII({1}, buf, len, __VA_ARGS__)\n".format(macro, log_level_name))
    f.write("\n")
    for log_level in log_level_dict:
        prefix = log_level[0]
        log_level_name = log_level[1]
        suffix = log_level[2]
        macro = "{0}LOG{1}_HEXDUMP_EX_NO_ASCII(buf, len, file, line, func, mod, ...)".format(prefix, suffix)
        f.write("#define {0} LOG_HEXDUMP_EX_NO_ASCII({1}, file, line, func, mod, buf, len, __VA_ARGS__)\n".format(macro, log_level_name))
    f.write("\n")
    for log_level in log_level_dict:
        prefix = log_level[0]
        log_level_name = log_level[1]
        suffix = log_level[2]
        macro = "{0}LOG{1}_HEXDUMPIOV(iov, iovcnt, len, ...)".format(prefix, suffix)
        f.write("#define {0} LOG_HEXDUMPIOV({1}, iov, iovcnt, len, __VA_ARGS__)\n".format(macro, log_level_name))
    f.write("\n")
    for log_level in log_level_dict:
        prefix = log_level[0]
        log_level_name = log_level[1]
        suffix = log_level[2]
        macro = "{0}LOG{1}_HEXDUMPIOV_EX(iov, iovcnt, len, file, line, func, mod, ...)".format(prefix, suffix)
        f.write("#define {0} LOG_HEXDUMPIOV_EX({1}, file, line, func, mod, iov, iovcnt, len, __VA_ARGS__)\n".format(macro, log_level_name))
    f.write("\n")
    for log_level in log_level_dict:
        prefix = log_level[0]
        log_level_name = log_level[1]
        suffix = log_level[2]
        macro = "{0}LOG{1}_HEXDUMPIOV_NO_ASCII(iov, iovcnt, len, ...)".format(prefix, suffix)
        f.write("#define {0} LOG_HEXDUMPIOV_NO_ASCII({1}, iov, iovcnt, len, __VA_ARGS__)\n".format(macro, log_level_name))
    f.write("\n")
    for log_level in log_level_dict:
        prefix = log_level[0]
        log_level_name = log_level[1]
        suffix = log_level[2]
        macro = "{0}LOG{1}_HEXDUMPIOV_EX_NO_ASCII(iov, iovcnt, len, file, line, func, mod, ...)".format(prefix, suffix)
        f.write("#define {0} LOG_HEXDUMPIOV_EX_NO_ASCII({1}, file, line, func, mod, iov, iovcnt, len, __VA_ARGS__)\n".format(macro, log_level_name))
    f.write("\n")
    # write the end of the file
    f.write("#endif\n")
